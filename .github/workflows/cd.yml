name: Continuous Delivery
on:
  push:
    branches: [ main ]
jobs:
  build:
    name: Execute Build
    runs-on: ubuntu-latest
    steps:
      - name: checkout source code
        uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.21.x
      - run: go build cmd/server/main.go

  test:
    name: Run Application Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: checkout source code
        uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.21.x
      - run: go test ./...

  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ vars.DOCKER_IMAGE }}
          tags: latest
      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: [push_to_registry]
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS Credentials Action For GitHub Actions
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: KUBECTL
        uses: azure/setup-kubectl@v3
      - run: aws sts get-caller-identity
      - run: aws eks update-kubeconfig --region us-east-1 --name hackaton-cluster
      - run: kubectl delete deploy mshackaton-deploy
      - run: kubectl delete configmap mshackaton-configmap
      - run: kubectl apply -f ./k8s/mshackaton-configmap.yml
      - run: kubectl apply -f ./k8s/mshackaton-deploy.yml
